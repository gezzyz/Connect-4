{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cvadu\\\\Connect4\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 12\n  }, this);\n}\n_c = Square;\nexport default function Grid() {\n  _s();\n  const numberOfRows = 6;\n  const numberOfSquares = 7;\n  const [squares, setSquares] = useState(Array(numberOfRows * numberOfSquares).fill(null));\n  const [lastSquare, setLastSquare] = useState(true);\n  function handleClick(i) {\n    if (squares[i]) {\n      return;\n    }\n    const nextSquare = squares.slice();\n    if (lastSquare) {\n      nextSquare[i] = 'X';\n    } else {\n      nextSquare[i] = 'O';\n    }\n    setLastSquare(!lastSquare);\n    setSquares(nextSquare);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [...Array(numberOfRows)].map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: [...Array(numberOfSquares)].map((_, squareIndex) => {\n        const index = rowIndex * numberOfSquares + squareIndex;\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[index],\n          onSquareClick: () => handleClick(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this);\n      })\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n_s(Grid, \"NEKJITULLyHIMTqDVtuQkto3gBA=\");\n_c2 = Grid;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Grid\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Grid","_s","numberOfRows","numberOfSquares","squares","setSquares","Array","fill","lastSquare","setLastSquare","handleClick","i","nextSquare","slice","map","_","rowIndex","squareIndex","index","_c2","$RefreshReg$"],"sources":["C:/Users/cvadu/Connect4/src/App.js"],"sourcesContent":["import {useState} from 'react';\r\n\r\nfunction Square({value, onSquareClick}){\r\n    return <button className=\"square\" onClick = {onSquareClick}>{value}</button>;\r\n}\r\nexport default function Grid(){\r\n\r\n    const numberOfRows = 6;\r\n    const numberOfSquares = 7;\r\n\r\n    const[squares, setSquares] = useState(Array(numberOfRows * numberOfSquares).fill(null));\r\n\r\n    const[lastSquare, setLastSquare] = useState(true);\r\n\r\n    function handleClick(i){\r\n\r\n        if(squares[i]){\r\n            return;\r\n        }\r\n\r\n        const nextSquare = squares.slice();\r\n\r\n        if(lastSquare){\r\n            nextSquare[i] = 'X';\r\n        }\r\n        else{\r\n            nextSquare[i] = 'O';\r\n        }\r\n        setLastSquare(!lastSquare);\r\n        setSquares(nextSquare);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {[...Array(numberOfRows)].map((_, rowIndex) => (\r\n            <div key={rowIndex} className=\"grid-row\">\r\n                {[...Array(numberOfSquares)].map((_, squareIndex) => {\r\n                    const index = rowIndex * numberOfSquares + squareIndex;\r\n                    return (\r\n                        <Square\r\n                            key={index}\r\n                            value={squares[index]}\r\n                            onSquareClick={() => handleClick(index)}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        ))}\r\n    </>\r\n    );\r\n}"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,SAASC,MAAMA,CAAC;EAACC,KAAK;EAAEC;AAAa,CAAC,EAAC;EACnC,oBAAOL,OAAA;IAAQM,SAAS,EAAC,QAAQ;IAACC,OAAO,EAAIF,aAAc;IAAAG,QAAA,EAAEJ;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAChF;AAACC,EAAA,GAFQV,MAAM;AAGf,eAAe,SAASW,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAE1B,MAAMC,YAAY,GAAG,CAAC;EACtB,MAAMC,eAAe,GAAG,CAAC;EAEzB,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAACsB,KAAK,CAACJ,YAAY,GAAGC,eAAe,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC,CAAC;EAEvF,MAAK,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAEjD,SAAS0B,WAAWA,CAACC,CAAC,EAAC;IAEnB,IAAGP,OAAO,CAACO,CAAC,CAAC,EAAC;MACV;IACJ;IAEA,MAAMC,UAAU,GAAGR,OAAO,CAACS,KAAK,CAAC,CAAC;IAElC,IAAGL,UAAU,EAAC;MACVI,UAAU,CAACD,CAAC,CAAC,GAAG,GAAG;IACvB,CAAC,MACG;MACAC,UAAU,CAACD,CAAC,CAAC,GAAG,GAAG;IACvB;IACAF,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BH,UAAU,CAACO,UAAU,CAAC;EAE1B;EAEA,oBACI1B,OAAA,CAAAE,SAAA;IAAAM,QAAA,EACC,CAAC,GAAGY,KAAK,CAACJ,YAAY,CAAC,CAAC,CAACY,GAAG,CAAC,CAACC,CAAC,EAAEC,QAAQ,kBACtC9B,OAAA;MAAoBM,SAAS,EAAC,UAAU;MAAAE,QAAA,EACnC,CAAC,GAAGY,KAAK,CAACH,eAAe,CAAC,CAAC,CAACW,GAAG,CAAC,CAACC,CAAC,EAAEE,WAAW,KAAK;QACjD,MAAMC,KAAK,GAAGF,QAAQ,GAAGb,eAAe,GAAGc,WAAW;QACtD,oBACI/B,OAAA,CAACG,MAAM;UAEHC,KAAK,EAAEc,OAAO,CAACc,KAAK,CAAE;UACtB3B,aAAa,EAAEA,CAAA,KAAMmB,WAAW,CAACQ,KAAK;QAAE,GAFnCA,KAAK;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGb,CAAC;MAEV,CAAC;IAAC,GAVIkB,QAAQ;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWb,CACR;EAAC,gBACJ,CAAC;AAEP;AAACG,EAAA,CA9CuBD,IAAI;AAAAmB,GAAA,GAAJnB,IAAI;AAAA,IAAAD,EAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}